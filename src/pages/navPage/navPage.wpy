<template>
    <view class='container'>
        <view class="tab-page-container">
            <homePage wx:if="{{currentTabIndex === 0}}" :currentPage.sync="currentPage" />
            <growLog wx:if="{{currentTabIndex === 1}}" :currentPage.sync="currentPage" />
            <userCenter wx:if="{{currentTabIndex === 3}}" :currentPage.sync="currentPage" />
        </view>
        <cover-view class="bottom-tab-bar">
            <cover-view
                class="tab-bar-item {{currentTabIndex === index ? gender === '男' ? 'tab-active-male' : 'tab-active-female' : ''}}"
                wx:for="{{tabBar}}" wx:for-item="item" wx:for-index="index" wx:key="{{item.name}}"
                data-index="{{index}}" @tap="bindTabClick">
                <cover-image
                    src="{{currentTabIndex === index ? gender === '男' ? item.srcMale : item.srcFemale : item.srcDefault}}"
                    alt="" />
                <cover-view>{{ item.name }}</cover-view>
            </cover-view>
        </cover-view>
    </view>
</template>

<style lang="less" src="./navPage.less"></style>


<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import BaseTab from 'components/Base/BaseTab/BaseTab';
import GrowLog from 'components/Business/GrowLog/GrowLog';
import UserCenter from 'components/Business/UserCenter/UserCenter';
import HomePage from 'components/Business/HomePage/HomePage';

const HEAD_NAV_GROUP = [
    {
        name: '首页',
        dataKey: 'home',
        srcFemale: '/assets/images/navtab/home-female.png',
        srcMale: '/assets/images/navtab/home-male.png',
        srcDefault: '/assets/images/navtab/home-default.png',
        formatFunc: () => {}
    },
    {
        name: '成长记录',
        dataKey: 'growLog',
        srcFemale: '/assets/images/navtab/log-female.png',
        srcMale: '/assets/images/navtab/log-male.png',
        srcDefault: '/assets/images/navtab/log-default.png',
        formatFunc: () => {}
    },
    {
        name: '圈子',
        dataKey: 'zoom',
        srcFemale: '/assets/images/navtab/zoom-female.png',
        srcMale: '/assets/images/navtab/zoom-male.png',
        srcDefault: '/assets/images/navtab/zoom-default.png',
        formatFunc: () => {}
    },
    {
        name: '我的',
        dataKey: 'userCenter',
        srcFemale: '/assets/images/navtab/user-female.png',
        srcMale: '/assets/images/navtab/user-male.png',
        srcDefault: '/assets/images/navtab/user-default.png',
        formatFunc: () => {}
    }
];

@connect(
    {
        gender(state) {
            return state.userInfo.gender;
        }
    },
    {}
)
export default class NavPage extends wepy.page {
    config = {
        navigationBarTitleText: 'Home',
        disableScroll: true
    };
    components = {
        baseTab: BaseTab,
        growLog: GrowLog,
        userCenter: UserCenter,
        homePage: HomePage
    };
    data = {
        currentTabIndex: 0,
        currentPage: 'baseData',
        tabBar: HEAD_NAV_GROUP
    };

    onLoad() {
        const { statusBarHeight } = wepy.getSystemInfoSync();
        const rpxHeight = statusBarHeight / 2;

        statusBarHeight > 40 && (this.userCenterTop += 30 + rpxHeight);
        this.$apply();
    }

    async onShow() {}

    async onHide() {
        this.informDetailScrollTimer &&
            clearInterval(this.informDetailScrollTimer);
    }

    onUnload() {}

    methods = {
        bindTabClick(e) {
            const { index } = e.currentTarget.dataset;
            const item = this.tabBar[index];
            this.currentTabIndex = index;
            this.currentPage = item.dataKey;
        }
    };
}
</script>
