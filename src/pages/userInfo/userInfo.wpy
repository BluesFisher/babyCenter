<template>
    <view class='container'>
        <baseContainer title="个人信息" :needMenuCenter.sync="needMenuCenter">
            <view slot="content-detail" class="user-info">

                <view class="user-menu">
                    <view class="base-menu-item" wx:for="{{userMenu}}" wx:for-item="item"
                        wx:for-index="index" wx:key="{{index}}">
                        <view class="base-menu-label">{{item.label}}</view>
                        <picker wx:if="{{item.type === 'pickerDate'}}" mode="date"
                            data-index="{{index}}" data-item="{{item}}" value="{{item.value}}"
                            end="{{nowDate}}" @change="bindUserMenuChange">
                            <text class="base-menu-value">{{ item.value }}</text>
                        </picker>

                        <view wx:elif="{{item.type==='image'}}" class='user-info-icon'
                            data-index="{{index}}" data-item="{{item}}" @tap="bindUserMenuChange">
                            <image mode="aspectFill" src='{{item.value}}' alt='' />
                        </view>

                        <input wx:elif="{{item.type==='input'}}" value="{{item.value}}"
                            placeholder="" data-index="{{index}}" data-item="{{item}}"
                            bindinput="bindUserMenuChange" />

                        <picker wx:elif="{{item.type==='pcikerRegion'}}" mode="region"
                            @change="bindRegionChange" value="{{region}}" data-index="{{index}}"
                            data-item="{{item}}" custom-item="{{customItem}}">
                            <text class="base-menu-value">{{item.value}}</text>
                        </picker>

                        <picker wx:elif="{{item.type==='pickerGender'}}"
                            @change="bindUserMenuChange" range="{{item.range}}" range-key="label"
                            data-index="{{index}}" data-item="{{item}}">
                            <text class="base-menu-value">{{item.value}}</text>
                        </picker>

                        <view wx:else class="base-menu-value">{{item.value}}</view>
                        <view class="down-arrow menu-arrow"></view>
                    </view>
                </view>
            </view>
        </baseContainer>
    </view>
</template>

<style lang="less" src="./userInfo.less"></style>


<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import { GENDER_INFO, BASE_INFO } from 'store/reducers/user-info';
import { GENDER_CODE } from 'utils/const-group';
import dayjs from 'dayjs';
import CommonFunc from 'utils/common-func';
import BaseContainer from 'components/Base/BaseContainer/BaseContainer';

const genderItems = [
    {
        value: '0',
        label: '女'
    },
    {
        value: '1',
        label: '男'
    }
];

const BASE_OPERATE = [
    {
        label: '获赞',
        icon: '',
        value: 1
    },
    {
        label: '粉丝',
        icon: '',
        value: 1,
        url: '/pages/myAttention/myAttention?type=fans'
    },
    {
        label: '文章',
        icon: '',
        value: 12
    }
];

const USER_MENU = [
    {
        label: '头像',
        value: '',
        type: 'image'
    },
    {
        label: '昵称',
        value: '',
        code: 'nickName',
        type: 'input'
    },
    {
        label: '性别',
        value: '',
        code: 'gender',
        range: genderItems,
        type: 'pickerGender'
    },
    {
        label: '所在地',
        value: '',
        type: 'pcikerRegion'
    },
    {
        label: '我的生日',
        value: '',
        type: 'pickerDate'
    },
    {
        label: '结婚日期',
        value: '',
        type: 'pickerDate'
    }
];
const ICON_INDEX = 0;
const NICK_NAME_INDEX = 1;
const GENDER_INDEX = 2;

@connect(
    {
        gender(state) {
            return state.userInfo.gender;
        }
    },
    { GENDER_INFO, BASE_INFO }
)
export default class UserInfo extends wepy.page {
    config = {
        navigationBarTitleText: 'Home',
        disableScroll: true
    };
    components = {
        baseContainer: BaseContainer
    };
    data = {
        baseInfo: {},
        needMenuCenter: true,
        baseOperate: BASE_OPERATE,
        userMenu: USER_MENU,
        nowDate: dayjs()
            .add(-1, 'day')
            .format('YYYY-MM-DD'),

        region: ['广东省', '深圳市', '南山区'],
        customItem: '全部'
    };

    async onLoad() {
        this.baseInfo = await CommonFunc.getStorage();
        this.userMenu[GENDER_INDEX].value =
            GENDER_CODE[+this.baseInfo.gender || 0];
        this.userMenu[NICK_NAME_INDEX].value = this.baseInfo.nickName;
        this.userMenu[ICON_INDEX].value = this.baseInfo.avatarUrl;
        this.methods.GENDER_INFO({
            gender: GENDER_CODE[this.baseInfo.gender]
        });
        this.$apply();
    }

    async onShow() {}

    async onHide() {}

    onUnload() {}

    watch = {
        async baseInfo(newVal) {
            await CommonFunc.wepyFunc('setStorage', {
                key: 'rawData',
                data: JSON.stringify(newVal)
            });
        }
    };

    methods = {
        bindUserMenuChange(e) {
            const { index, item } = e.currentTarget.dataset;

            if (item.type === 'image') {
                this.chooseUserIcon(e);
                return;
            }
            const { value } = e.detail;
            this.userMenu[index].value = item.range
                ? item.range[value].label
                : value;
            let setBaseInfoValue = this.userMenu[index].value;

            if (item.type === 'pickerGender') {
                this.methods.GENDER_INFO({
                    gender: this.userMenu[index].value
                });
                setBaseInfoValue = this.userMenu[index].value === '女' ? 0 : 1;
            }
            if (item.code) {
                this.baseInfo[item.code] = setBaseInfoValue;
                this.methods.BASE_INFO({
                    baseInfo: this.baseInfo
                });
            }

            this.$apply();
        },
        bindRegionChange(e) {
            const { index } = e.currentTarget.dataset;
            this.userMenu[index].value = e.detail.value.join(' ');
        },
        bindOperate(e) {
            const { item } = e.currentTarget.dataset;
            item.url && wepy.navigateTo({ url: item.url });
        }
    };

    async chooseUserIcon(e) {
        const { index } = e.currentTarget.dataset;
        const { res } = await CommonFunc.wepyFunc('chooseImage', {
            count: 1,
            sizeType: ['original', 'compressed'],
            sourceType: ['album', 'camera']
        });
        const tempFilePaths = res.tempFilePaths;
        this.baseInfo.avatarUrl = tempFilePaths[0];
        this.methods.BASE_INFO({
            baseInfo: this.baseInfo
        });
        this.userMenu[index].value = tempFilePaths[0];
        this.$apply();
    }
}
</script>
